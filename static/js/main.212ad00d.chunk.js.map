{"version":3,"sources":["icons/types-icons sync /.svg$","icons/types-icons/bug.svg","icons/types-icons/dark.svg","icons/types-icons/dragon.svg","icons/types-icons/electric.svg","icons/types-icons/fairy.svg","icons/types-icons/fighting.svg","icons/types-icons/fire.svg","icons/types-icons/flying.svg","icons/types-icons/ghost.svg","icons/types-icons/grass.svg","icons/types-icons/ground.svg","icons/types-icons/ice.svg","icons/types-icons/normal.svg","icons/types-icons/poison.svg","icons/types-icons/psychic.svg","icons/types-icons/rock.svg","icons/types-icons/steel.svg","icons/types-icons/water.svg","reportWebVitals.ts","workflows/httpWorkflow.ts","slices/pokemonsSlice.ts","slices/evolutionSlice.ts","middleware/pokemonCacheMiddleware.ts","store/store.ts","utils/pokemon.ts","components/PokemonType.tsx","components/PokemonImageSwitcher.tsx","components/PokemonCard.tsx","components/PokeBall.tsx","icons/pickachu2.png","components/PokemonEvolutionForms.tsx","components/PokemonEvolution.tsx","components/PokemonAttributes.tsx","components/PokemonList.tsx","components/common/Spinner.tsx","utils/function.ts","components/common/ArrowButton.tsx","components/PokemonApp.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API_URL","defaultOptions","headers","createUrl","path","includes","httpRequest","options","a","requestUrl","requestOptions","responseData","fetch","response","json","data","error","responseDate","Date","now","console","log","message","fetchPokemonByName","createAsyncThunk","pokemonName","getPokemonsUrl","limit","page","params","join","fetchPokemons","dispatch","url","fetchPokemonsInfo","results","getPokemonsInfoUrls","store","pokemonList","pokemons","reduce","result","current","entities","name","push","getState","requestUrls","Promise","all","pokemonsSlice","createSlice","initialState","list","listFetching","nextUrl","previousUrl","entitiesFetching","reducers","resetPokemonsInfo","state","extraReducers","builder","addCase","fulfilled","action","payload","pending","next","previous","forEach","selectPokemons","selectPokemonByName","selectFetching","selectUrls","actions","findEvolutionForms","evolutionData","currentFormName","chain","fillEvolutionChain","evolutionChain","species","evolves_to","find","curentFormIndex","findIndex","previousForm","nextForm","getEntityByName","fetchPokemonSpecies","thunkAPI","pokemonEntity","speciesUrl","evolutionChainUrl","evolution_chain","fetchPokemonEvolutionChain","getMissingForms","forms","filter","form","entity","evolution","curentForm","evolutionSlice","meta","arg","fetching","createEvolutionEntity","speciesData","base_happiness","capture_rate","generation","hapiness","captureRate","normalizeSpeciesData","pokemonCacheMiddleware","type","typePrefix","pokemonCacheInvalidator","configureStore","reducer","middleware","getDefaultMiddleware","concat","getPokemonAttributes","pokemon","attributes","attributesNames","attribute","statAttributes","stats","statItem","stat","value","base_stat","alias","getAttributeLevel","getOfficialImage","sprites","other","front_default","typesIcons","require","iconMapper","images","pathUtil","basename","extname","file","default","PokemonType","icon","data-tooltip","className","src","alt","PokemonImageSwitcher","useState","checked","setChecked","officialImage","dreamWorldImage","dream_world","getDreamWorldImage","isMultipleImages","onChange","mainAttributes","PokemonCard","children","height","weight","types","typeItem","getPokemonTypes","hpAttribute","faHeart","index","PokeBall","finished","onClick","cx","PokemonEvolutionForms","useSelector","previousFormImage","nextFormImage","right","faAngleDoubleRight","faAngleDoubleUp","pikachuImage","PokemonEvolution","useDispatch","selectEvolution","isFinished","PokemonAttributes","existAttributes","PokemonList","Spinner","noop","DIRECTION_KEYS","left","down","up","DIRECTION_ICONS","faArrowAltCircleLeft","faArrowAltCircleRight","faArrowAltCircleDown","faArrowAltCircleUp","ArrowButton","memo","direction","disabled","enableKeyDown","onKeyDown","useEffect","handleKeyDown","event","window","addEventListener","removeEventListener","PokemonApp","history","useHistory","pageNumber","useParams","urls","loadPokemons","parseInt","loadPrevPokemons","useCallback","loadNextPokemons","isNaN","length","href","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.212ad00d.chunk.js","sourcesContent":["var map = {\n\t\"./bug.svg\": 49,\n\t\"./dark.svg\": 50,\n\t\"./dragon.svg\": 51,\n\t\"./electric.svg\": 52,\n\t\"./fairy.svg\": 53,\n\t\"./fighting.svg\": 54,\n\t\"./fire.svg\": 55,\n\t\"./flying.svg\": 56,\n\t\"./ghost.svg\": 57,\n\t\"./grass.svg\": 58,\n\t\"./ground.svg\": 59,\n\t\"./ice.svg\": 60,\n\t\"./normal.svg\": 61,\n\t\"./poison.svg\": 62,\n\t\"./psychic.svg\": 63,\n\t\"./rock.svg\": 64,\n\t\"./steel.svg\": 65,\n\t\"./water.svg\": 66\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","export default __webpack_public_path__ + \"static/media/bug.204df919.svg\";","export default __webpack_public_path__ + \"static/media/dark.27fdc7ed.svg\";","export default __webpack_public_path__ + \"static/media/dragon.9d32757b.svg\";","export default __webpack_public_path__ + \"static/media/electric.bc35c5a3.svg\";","export default __webpack_public_path__ + \"static/media/fairy.767c2f56.svg\";","export default __webpack_public_path__ + \"static/media/fighting.f20d1bd2.svg\";","export default __webpack_public_path__ + \"static/media/fire.e0bd7fca.svg\";","export default __webpack_public_path__ + \"static/media/flying.d1778503.svg\";","export default __webpack_public_path__ + \"static/media/ghost.ddf26831.svg\";","export default __webpack_public_path__ + \"static/media/grass.e09623e3.svg\";","export default __webpack_public_path__ + \"static/media/ground.e567f4fc.svg\";","export default __webpack_public_path__ + \"static/media/ice.cd2f9043.svg\";","export default __webpack_public_path__ + \"static/media/normal.2ba66dd5.svg\";","export default __webpack_public_path__ + \"static/media/poison.43956925.svg\";","export default __webpack_public_path__ + \"static/media/psychic.67439878.svg\";","export default __webpack_public_path__ + \"static/media/rock.61a8428d.svg\";","export default __webpack_public_path__ + \"static/media/steel.cb91a92a.svg\";","export default __webpack_public_path__ + \"static/media/water.b6d13329.svg\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const API_URL = 'https://pokeapi.co/api/v2';\r\n\r\nconst defaultOptions: RequestInit = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  }\r\n};\r\n\r\nconst createUrl = (path: string) => {\r\n  // Pokemon API sends full-formatted URL inside response, so in this cases we don't need\r\n  // to use default URL and just rely on what we got from path.\r\n  if (path.includes(API_URL)) return path;\r\n\r\n  return `${API_URL}${path}`; \r\n}\r\n\r\nexport const httpRequest = async (path: string, options?: RequestInit) => {\r\n  const requestUrl = createUrl(path);\r\n  const requestOptions = { ...defaultOptions, ...options };\r\n\r\n  let responseData = null;\r\n\r\n  try {\r\n    const response = await fetch(requestUrl, requestOptions);\r\n    const data = await response.json();\r\n\r\n    responseData = { data, error: null, responseDate: Date.now() };\r\n\r\n    return responseData;\r\n  } catch(e) {\r\n    console.log('fetched failed with', e.message);\r\n\r\n    responseData = { data: null, error: e, responseDate: Date.now() }\r\n\r\n    return responseData;\r\n  }\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport { httpRequest } from '../workflows/httpWorkflow';\r\nimport { RootState } from '../store/store'; \r\n\r\ninterface PokemonList {\r\n  name: string;\r\n  url: string;\r\n}\r\n\r\ninterface  PokemonState {\r\n  list: PokemonList[],\r\n  listFetching: boolean,\r\n  nextUrl: string,\r\n  previousUrl: string,\r\n  entities: { [key: string]: any },\r\n  entitiesFetching: boolean,\r\n  error: null | Error,\r\n  responseDate: number\r\n}\r\n\r\nconst initialState: PokemonState = {\r\n  list: [],\r\n  listFetching: false,\r\n  nextUrl: '',\r\n  previousUrl: '',\r\n  entities: {},\r\n  entitiesFetching: false,\r\n  error: null,\r\n  responseDate: 0\r\n}\r\n\r\ninterface FetchPokemonsOptions {\r\n  limit?: number\r\n  page?: number\r\n}\r\n\r\nexport const fetchPokemonByName = createAsyncThunk('pokemon/fetchPokemonByName', async (pokemonName: string) => {\r\n  const response = await httpRequest(`/pokemon/${pokemonName}`);\r\n\r\n  return response;\r\n})\r\n\r\nconst getPokemonsUrl = (options: FetchPokemonsOptions) => {\r\n  const defaultOptions = { limit: 8, page: 0 };\r\n  const requestOptions = { ...defaultOptions, ...options };\r\n  const params = [`offset=${(requestOptions.page - 1) * requestOptions.limit}`, `limit=${requestOptions.limit}`, ]\r\n\r\n  return `/pokemon?${params.join('&')}`;\r\n}\r\n\r\nexport const fetchPokemons = createAsyncThunk<any, FetchPokemonsOptions, { state: RootState }>('pokemon/fetchPokemons', async (options, { dispatch }) => {\r\n  const url = getPokemonsUrl(options)\r\n  const response = await httpRequest(url);\r\n\r\n  if (!response.error) {\r\n    dispatch(fetchPokemonsInfo(response.data?.results));\r\n  }\r\n\r\n  return response;\r\n})\r\n\r\nconst getPokemonsInfoUrls = (store: RootState, pokemonList: PokemonList[]) => {\r\n  const { pokemons } = store;\r\n\r\n  // Check if requested pokemons already in the cache, if not just return related url\r\n  return pokemonList.reduce((result: string[], current: PokemonList): string[] => {\r\n    const pokemonEntity = pokemons.entities[current.name];\r\n\r\n    if (!pokemonEntity) {\r\n      result.push(current.url);\r\n    }\r\n\r\n    return result;\r\n  }, []);\r\n}\r\n\r\nexport const fetchPokemonsInfo = createAsyncThunk<any, PokemonList[], { state: RootState }>('pokemon/fetchPokemonsInfo', async (pokemonList, { getState }) => {\r\n  const requestUrls = getPokemonsInfoUrls(getState(), pokemonList);\r\n\r\n  return Promise.all(requestUrls.map(url => httpRequest(url)))\r\n    .then(response => {\r\n      return { data: response, error: null, responseDate: Date.now() };\r\n    });\r\n})\r\n\r\nexport const pokemonsSlice = createSlice({\r\n  name: 'pokemons',\r\n  initialState,\r\n  reducers: {\r\n    resetPokemonsInfo(state) {\r\n      state.entities = {};\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPokemonByName.fulfilled, (state, action) => {\r\n      const { data, error } = action.payload;\r\n\r\n      if (error) {\r\n        state.error = error;\r\n        return;\r\n      }\r\n\r\n      state.entities[data.name] = data;\r\n    });\r\n\r\n    builder.addCase(fetchPokemons.pending, (state) => {\r\n      state.listFetching = true;\r\n    });\r\n\r\n    builder.addCase(fetchPokemons.fulfilled, (state, action) => {\r\n      const { data, error } = action.payload;\r\n\r\n      if (error) {\r\n        state.listFetching = false;\r\n        state.error = error;\r\n        return;\r\n      }\r\n\r\n      state.list = data.results;\r\n      state.listFetching = false;\r\n      state.nextUrl = data.next;\r\n      state.previousUrl = data.previous;\r\n    });\r\n\r\n    builder.addCase(fetchPokemonsInfo.pending, (state) => {\r\n      state.entitiesFetching = true;\r\n    });\r\n\r\n    builder.addCase(fetchPokemonsInfo.fulfilled, (state, action) => {\r\n      const { data, error, responseDate } = action.payload;\r\n\r\n      if (error) {\r\n        state.entitiesFetching = false;\r\n        state.error = error;\r\n        return;\r\n      }\r\n\r\n      state.entitiesFetching = false;\r\n      state.responseDate = responseDate;\r\n      data.forEach(({ data }) => state.entities[data.name] = data);\r\n    })\r\n  }\r\n})\r\n\r\nexport const selectPokemons = (state: RootState) => {\r\n  const { list, entities, entitiesFetching } = state.pokemons;\r\n\r\n  return entitiesFetching ? [] : list.map(({ name }) => entities[name]);\r\n}\r\n\r\nexport const selectPokemonByName = (state: RootState, name: string) => {\r\n  return state.pokemons.entities[name];\r\n}\r\n\r\nexport const selectFetching = (state: RootState) => {\r\n  return state.pokemons.listFetching || state.pokemons.entitiesFetching;\r\n}\r\n\r\nexport const selectUrls = (state: RootState) => {\r\n  return {\r\n    previousUrl: state.pokemons.previousUrl,\r\n    nextUrl: state.pokemons.nextUrl,\r\n  }\r\n}\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { resetPokemonsInfo } = pokemonsSlice.actions\r\n\r\nexport default pokemonsSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nimport { httpRequest } from '../workflows/httpWorkflow';\r\nimport { fetchPokemonByName, selectPokemonByName } from '../slices/pokemonsSlice';\r\nimport { RootState } from '../store/store';\r\n\r\ninterface Species {\r\n  hapiness?: number\r\n  captureRate?: number\r\n  generation?: string\r\n  curentForm?: string\r\n}\r\nexport interface Evolution extends Species {\r\n  nextForm?: string\r\n  previousForm?: string\r\n}\r\n\r\ninterface Entity {\r\n  fetching: boolean,\r\n  error: null | Error,\r\n  state: string,\r\n  evolution: Evolution\r\n}\r\ninterface  EvolutionState {\r\n  entities: { [key: string]: Entity }\r\n}\r\n\r\n\r\nconst initialState: EvolutionState = {\r\n  entities: {}\r\n}\r\n\r\nconst normalizeSpeciesData = (speciesData: any): Species => {\r\n  const { base_happiness, capture_rate, generation, name } = speciesData;\r\n\r\n  return {\r\n    hapiness: base_happiness,\r\n    captureRate: capture_rate,\r\n    generation: generation.name,\r\n    curentForm: name\r\n  };\r\n}\r\n\r\nconst findEvolutionForms = (evolutionData, currentFormName: string) => {\r\n  if (!evolutionData) return;\r\n\r\n  const chain: string[] = [];\r\n  const fillEvolutionChain = (evolutionChain) => {\r\n    if (!evolutionChain || !evolutionChain.species) return;\r\n\r\n    if (evolutionChain.species) {\r\n      chain.push(evolutionChain.species.name);\r\n\r\n      const current = evolutionChain.evolves_to.find(({ species }) => species?.name === currentFormName);\r\n\r\n      fillEvolutionChain(current || evolutionChain.evolves_to[0]);\r\n    }\r\n  }\r\n\r\n  fillEvolutionChain(evolutionData.chain);\r\n\r\n  const curentFormIndex = chain.findIndex(name => name === currentFormName);\r\n\r\n  return {\r\n    previousForm: chain[curentFormIndex - 1],\r\n    nextForm: chain[curentFormIndex + 1]\r\n  }\r\n}\r\n\r\nconst createEvolutionEntity = (entity: Partial<Entity>) => {\r\n  return {\r\n    fetching: false,\r\n    error: null,\r\n    state: 'idle',\r\n    evolution: {},\r\n    ...entity\r\n  }\r\n}\r\n\r\nconst getEntityByName = (state: EvolutionState, name: string) => {\r\n  return state.entities[name];\r\n}\r\n\r\nexport const fetchPokemonSpecies = createAsyncThunk<any, string, { state: RootState }>('evolution/fetchPokemonSpecies', async (pokemonName, thunkAPI) => {\r\n  const { dispatch, getState } = thunkAPI;\r\n  const store = getState();\r\n  const pokemonEntity = store.pokemons.entities[pokemonName];\r\n\r\n  if (!pokemonEntity) {\r\n    return { data: null, error: 'No data available', responseDate: Date.now() };\r\n  }\r\n\r\n  const speciesUrl = pokemonEntity.species.url;\r\n  const response = await httpRequest(speciesUrl);\r\n\r\n  if (!response.error) {\r\n    const evolutionChainUrl = response.data?.evolution_chain?.url;\r\n\r\n    dispatch(fetchPokemonEvolutionChain({ url: evolutionChainUrl, name: pokemonEntity.name }));\r\n  }\r\n\r\n  return response;\r\n});\r\n\r\nconst getMissingForms = (forms: string[], store: RootState) => {\r\n  return forms.filter(form => form).reduce((result, form) => {\r\n    const pokemon = selectPokemonByName(store, form);\r\n\r\n    if (!pokemon) {\r\n      result.push(form)\r\n    }\r\n\r\n    return result;\r\n  }, []);\r\n}\r\n\r\nexport const fetchPokemonEvolutionChain = createAsyncThunk<any, { url: string, name: string }, { state: RootState }>('evolution/fetchPokemonEvolutionChain', async ({ url, name }, { getState, dispatch }) => {\r\n  const response = await httpRequest(url);\r\n\r\n  if (!response.error) {\r\n    const store = getState();\r\n    const entity = getEntityByName(store.evolution, name);\r\n    // Evolution chains loaded separately and some of future/past forms might be not loaded yet, load them apart\r\n    const { previousForm, nextForm } = findEvolutionForms(response.data, entity.evolution.curentForm);\r\n    const forms = getMissingForms([previousForm, nextForm], store)\r\n\r\n    await Promise.all(forms.map(form => dispatch(fetchPokemonByName(form))));\r\n  }\r\n\r\n  return response;\r\n});\r\n\r\nexport const evolutionSlice = createSlice({\r\n  name: 'pokemons',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPokemonSpecies.pending, (state, action) => {\r\n      const name = action.meta.arg;\r\n      const entity = getEntityByName(state, name);\r\n\r\n      if (entity) {\r\n        entity.fetching = true;\r\n      } else {\r\n        state.entities[name] = createEvolutionEntity({ fetching: true });\r\n      }\r\n    });\r\n\r\n    builder.addCase(fetchPokemonSpecies.fulfilled, (state, action) => {\r\n      const { data, error } = action.payload;\r\n      const name = action.meta.arg;\r\n      const entity = getEntityByName(state, name);\r\n\r\n      if (error) {\r\n        entity.fetching = false;\r\n        entity.error = error\r\n        return;\r\n      }\r\n\r\n      entity.evolution = normalizeSpeciesData(data);\r\n    });\r\n\r\n    builder.addCase(fetchPokemonEvolutionChain.fulfilled, (state, action) => {\r\n      const { data, error } = action.payload;\r\n      const { name } = action.meta.arg;\r\n      const entity = getEntityByName(state, name);\r\n\r\n      if (error) {\r\n        entity.fetching = false;\r\n        entity.error = error;\r\n        entity.state = 'finished';\r\n        return;\r\n      }\r\n\r\n      const { previousForm, nextForm } = findEvolutionForms(data, entity.evolution.curentForm);\r\n\r\n      entity.fetching = false;\r\n      entity.state = 'finished';\r\n      entity.evolution.previousForm = previousForm;\r\n      entity.evolution.nextForm = nextForm;\r\n    });\r\n  }\r\n})\r\n\r\nexport const selectEvolution = (state: RootState, pokemonName: string) => {\r\n  const entity = getEntityByName(state.evolution, pokemonName);\r\n\r\n  return entity;\r\n}\r\n\r\n\r\nexport default evolutionSlice.reducer\r\n","import { fetchPokemonsInfo, resetPokemonsInfo } from '../slices/pokemonsSlice';\r\n\r\nconst POKEMON_INFO_INVALIDATION_TIME = 1000 * 60 * 60 // 60min\r\n\r\nexport const pokemonCacheMiddleware = store => next => action => {\r\n  switch (action.type) {\r\n    case `${fetchPokemonsInfo.typePrefix}/pending`:\r\n      pokemonCacheInvalidator(store);\r\n      break;\r\n  }\r\n  return next(action);\r\n};\r\n\r\n\r\nconst pokemonCacheInvalidator = ({ dispatch, getState }) => {\r\n  const { pokemons } = getState();\r\n  const { responseDate } = pokemons;\r\n  const now = Date.now();\r\n\r\n  if (responseDate && (now - responseDate > POKEMON_INFO_INVALIDATION_TIME)) {\r\n    dispatch(resetPokemonsInfo());\r\n  }\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport pokemonsSlice from '../slices/pokemonsSlice';\r\nimport evolutionSlice from '../slices/evolutionSlice';\r\n\r\nimport { pokemonCacheMiddleware } from '../middleware/pokemonCacheMiddleware';\r\n\r\n\r\nconst store =  configureStore({\r\n  reducer: {\r\n    pokemons: pokemonsSlice,\r\n    evolution: evolutionSlice\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(pokemonCacheMiddleware)\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport default store;\r\n","\r\nexport interface Attributes {\r\n  name: string;\r\n  alias?: string\r\n}\r\n\r\nexport const getPokemonAttributes = (pokemon: any, attributes: Attributes[] = []) => {\r\n  if (!pokemon) return;\r\n\r\n  const attributesNames = attributes.map(attribute => attribute.name);\r\n  const statAttributes = pokemon.stats.filter(statItem => attributesNames.includes(statItem.stat.name));\r\n\r\n  return statAttributes.map(statItem => {\r\n    const { name } = statItem.stat;\r\n    const attribute = attributes.find(attribute => attribute.name === name);\r\n\r\n    return { name, value: statItem.base_stat, ...(attribute && { alias: attribute.alias }) };\r\n  })\r\n}\r\n\r\nexport const getPokemonTypes = (pokemon: any) => {\r\n  if (!pokemon) return;\r\n\r\n  return pokemon.types.map(typeItem => typeItem.type.name);\r\n}\r\n\r\nexport const getAttributeLevel = (value: number) => {\r\n  const highThreshold = 80;\r\n  const mediumThreshold = 50;\r\n\r\n  switch (true) {\r\n    case value >= highThreshold:\r\n      return 'high';\r\n\r\n    case value >= mediumThreshold:\r\n      return 'medium';\r\n\r\n    default:\r\n      return 'low';\r\n  }\r\n}\r\n\r\nexport const getOfficialImage = (pokemon: any) => {\r\n  if (!pokemon) return null;\r\n\r\n  return pokemon.sprites?.other?.['official-artwork']?.front_default;\r\n}\r\n\r\nexport const getDreamWorldImage = (pokemon: any) => {\r\n  if (!pokemon) return null;\r\n\r\n  return pokemon.sprites?.other?.dream_world?.front_default;\r\n}","import pathUtil from 'path';\r\n\r\nimport './PokemonType.scss';\r\n\r\n// Load all svgs dynamically to avoid repetitive imports\r\nconst typesIcons = require.context ('../icons/types-icons/', true, /\\.svg$/)\r\nconst iconMapper = typesIcons\r\n  .keys()\r\n  .reduce((images, path) => {\r\n    const id = pathUtil.basename(path, pathUtil.extname(path))\r\n\r\n    images[id] = { path, file: typesIcons(path).default }\r\n    return images;\r\n  }, {});\r\n\r\n\r\ninterface PokemonTypeProps {\r\n  type: string\r\n}\r\n\r\nexport const PokemonType = ({ type }: PokemonTypeProps) => {\r\n  const icon = iconMapper[type];\r\n\r\n  return icon ? <span data-tooltip={type} className={`type-icon ${type}`}><img src={icon.file} alt={type} /></span> : null\r\n}","import { useState } from 'react';\r\nimport { getOfficialImage, getDreamWorldImage } from '../utils/pokemon';\r\n\r\nimport './PokemonImageSwitcher.scss';\r\n\r\ninterface PokemonImageProps {\r\n  pokemon: any;\r\n}\r\n\r\nexport const PokemonImageSwitcher = ({ pokemon }: PokemonImageProps) => {\r\n  const [ checked,  setChecked ] = useState(false);\r\n\r\n  const officialImage = getOfficialImage(pokemon);\r\n  const dreamWorldImage = getDreamWorldImage(pokemon);\r\n  const isMultipleImages = !!officialImage && !!dreamWorldImage;\r\n\r\n  const handleChecked = () => {\r\n    setChecked(checked => !checked);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokemon-image-switcher\">\r\n      {isMultipleImages && (\r\n        <label className=\"checkbox-label\">\r\n          <input type=\"checkbox\" className=\"checkbox-input\" checked={checked} onChange={handleChecked} />\r\n          <span className=\"checkbox-custom\"></span>\r\n        </label>\r\n      )}\r\n      <img className={`pokemon-image ${checked ? 'hidden' : ''}`} src={officialImage} alt={pokemon.name} />\r\n      <img className={`pokemon-image ${checked ? '' : 'hidden'}`} src={dreamWorldImage} alt={pokemon.name} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { getPokemonAttributes, getPokemonTypes } from '../utils/pokemon';\r\nimport { PokemonType } from './PokemonType';\r\nimport { PokemonImageSwitcher } from './PokemonImageSwitcher'; \r\n\r\nimport './PokemonCard.scss';\r\n\r\n\r\ninterface PokemonCardProps {\r\n  pokemon: any;\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst mainAttributes = [{ name: 'hp', alias: 'HP'}];\r\n\r\nexport const PokemonCard = ({ pokemon, children }: PokemonCardProps) => {\r\n  const { name, height, weight } = pokemon;\r\n  const types = getPokemonTypes(pokemon);\r\n  const hpAttribute = getPokemonAttributes(pokemon, mainAttributes);\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <div className=\"pokemon-card-header\">\r\n        <div className=\"pokemon-card-info\">\r\n          <p className=\"pokemon-name\">{name}</p>\r\n          <FontAwesomeIcon icon={faHeart} className=\"pokemon-hp-icon\" />\r\n          <span className=\"pokemon-hp\">{hpAttribute[0]?.value}HP</span>\r\n          <ul className=\"pokemon-types reset-list\">{types.map((type, index) => <li key={index}><PokemonType type={type} /></li>)}</ul>\r\n        </div>\r\n        <PokemonImageSwitcher pokemon={pokemon} />\r\n      </div>\r\n      <div className=\"pokemon-label\">Height: {height} | Weight: {weight}</div>\r\n      <hr className=\"pokemon-separator\" />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import cx from 'classnames';\r\n\r\nimport './PokeBall.scss';\r\n\r\n\r\ninterface PokeBallProps {\r\n  fetching?: boolean\r\n  finished?: boolean\r\n  onClick: () => void\r\n}\r\n\r\nexport const PokeBall = ({ fetching, finished, onClick }: PokeBallProps) => {\r\n  return (\r\n    <div className={cx('pokeball', { fetching, finished })} onClick={onClick}>\r\n      <div className=\"pokeball-up\"></div>\r\n      <div className=\"pokeball-down\"></div>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pickachu2.aec47caa.png\";","import cx from 'classnames';\r\nimport { useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faAngleDoubleUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Evolution } from '../slices/evolutionSlice';\r\nimport { selectPokemonByName } from '../slices/pokemonsSlice';\r\nimport { RootState } from '../store/store';\r\nimport { getOfficialImage } from '../utils/pokemon';\r\nimport pikachuImage from '../icons/pickachu2.png';\r\n\r\nimport './PokemonEvolutionForms.scss'\r\n\r\n\r\ninterface PokemonEvolutionChainProps {\r\n  evolution: Evolution\r\n  finished: boolean\r\n}\r\n\r\nexport const PokemonEvolutionForms = ({ evolution, finished }: PokemonEvolutionChainProps) => {;\r\n  // TODO: This does not feels good from logical standpoint, seems if we need to get partial selector we need to create\r\n  // a separate component inside <map> and use <useSelector> inside.\r\n  const state = useSelector((state: RootState) => state);\r\n  const previousForm = selectPokemonByName(state, evolution?.previousForm);\r\n  const nextForm = selectPokemonByName(state, evolution?.nextForm);\r\n  const previousFormImage = getOfficialImage(previousForm);\r\n  const nextFormImage = getOfficialImage(nextForm);\r\n\r\n  if (!finished) return null;\r\n\r\n  if (!previousForm && !nextForm && finished) {\r\n    return (\r\n      <div className=\"no-evolution\">\r\n        <p>No evolution form found.</p>\r\n        <img src={pikachuImage} alt=\"no evolution form\" />\r\n      </div>\r\n  )}\r\n\r\n  return (\r\n    <div className={cx('evolution-chain', { right: !!nextForm && !previousForm })}>\r\n      {previousForm ? (\r\n        <div className=\"evolution-form previous-form\">\r\n          <p className=\"evolution-name align-left\">{previousForm?.name}</p>\r\n          <div className=\"evolution-image-wrapper\">\r\n            <img className=\"evolution-image\" src={previousFormImage} alt={previousForm.name} />\r\n            <FontAwesomeIcon className=\"evolution-arrow previous\" icon={faAngleDoubleRight} />\r\n            <FontAwesomeIcon className=\"evolution-arrow previous\" icon={faAngleDoubleRight} />\r\n          </div>\r\n        </div>\r\n      ) : <div />}\r\n\r\n      <div className=\"current-form\">\r\n        <FontAwesomeIcon className=\"evolution-arrow current\" icon={faAngleDoubleUp} />\r\n        <FontAwesomeIcon className=\"evolution-arrow current\" icon={faAngleDoubleUp} />\r\n        <FontAwesomeIcon className=\"evolution-arrow current\" icon={faAngleDoubleUp} />\r\n      </div>\r\n\r\n      {nextForm ? (\r\n        <div className=\"evolution-form next-form\">\r\n          <p className=\"evolution-name align-right\">{nextForm?.name}</p>\r\n          <div className=\"evolution-image-wrapper\">\r\n            <FontAwesomeIcon className=\"evolution-arrow next\" icon={faAngleDoubleRight} />\r\n            <FontAwesomeIcon className=\"evolution-arrow next\" icon={faAngleDoubleRight} />\r\n            <img className=\"evolution-image\" src={nextFormImage} alt={nextForm.name} />\r\n          </div>\r\n        </div>\r\n      ) : <div />}\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchPokemonSpecies, selectEvolution } from '../slices/evolutionSlice';\r\nimport { RootState } from '../store/store';\r\nimport { PokeBall } from './PokeBall';\r\nimport { PokemonEvolutionForms } from './PokemonEvolutionForms';\r\n\r\nimport './PokemonEvolution.scss';\r\n\r\ninterface PokemonEvolutionProps {\r\n  pokemon: any;\r\n}\r\n\r\nexport const PokemonEvolution = ({ pokemon }: PokemonEvolutionProps) => {\r\n  const dispatch = useDispatch();\r\n  const evolutionData = useSelector((state: RootState) => selectEvolution(state, pokemon.name));\r\n  const isFinished = evolutionData?.state === 'finished';\r\n\r\n  const handleClick = () => {\r\n    if (evolutionData?.fetching || isFinished) return;\r\n    \r\n    dispatch(fetchPokemonSpecies(pokemon.name));\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokemon-evolution\">\r\n      {<PokeBall fetching={evolutionData?.fetching} finished={isFinished} onClick={handleClick} />}\r\n      <PokemonEvolutionForms evolution={evolutionData?.evolution} finished={isFinished} />\r\n    </div>\r\n  )\r\n}\r\n","import { getPokemonAttributes, getAttributeLevel, Attributes } from '../utils/pokemon';\r\n\r\nimport './PokemonAttributes.scss';\r\n\r\n\r\ninterface PokemonAttributesProps {\r\n  pokemon: any;\r\n  attributes: Attributes[]\r\n}\r\n\r\nexport const PokemonAttributes = ({ pokemon, attributes = [] }: PokemonAttributesProps) => {\r\n  const existAttributes = getPokemonAttributes(pokemon, attributes);\r\n\r\n  return (\r\n    <ul className=\"pokemons-attributes reset-list\">\r\n      {existAttributes.map(({ alias, value }, index) => (\r\n        <li key={index} className=\"pokemons-attributes-item\">\r\n          <div className=\"pokemons-attributes-name\">{alias}</div>\r\n          <div className={`pokemons-attributes-value ${getAttributeLevel(value)}`}>{value}</div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n","import { PokemonCard } from './PokemonCard';\r\nimport { PokemonEvolution } from './PokemonEvolution';\r\nimport { PokemonAttributes } from './PokemonAttributes';\r\n\r\nimport './PokemonList.scss';\r\n\r\n\r\ninterface PokemonListProps {\r\n  pokemons: any[]\r\n}\r\n\r\nconst attributes = [\r\n  { name: 'attack', alias: 'atck' },\r\n  { name: 'defense', alias: 'def' },\r\n  { name: 'special-attack', alias: 'spec. atck' },\r\n  { name: 'special-defense', alias: 'spec. def' },\r\n  { name: 'speed', alias: 'def' }\r\n]\r\n\r\nexport const PokemonList = ({ pokemons }: PokemonListProps) => {\r\n  return (\r\n      <div className=\"pokemon-list\">\r\n        {pokemons.map(pokemon => {\r\n          return (\r\n            <PokemonCard key={pokemon.id}  pokemon={pokemon}>\r\n              <PokemonEvolution pokemon={pokemon} />\r\n              <PokemonAttributes pokemon={pokemon} attributes={attributes} />\r\n            </PokemonCard>\r\n          )\r\n        })}\r\n      </div>\r\n  )\r\n}\r\n","\r\nimport './Spinner.scss';\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\"></div>\r\n  )\r\n}\r\n","export const noop = () => {};\r\n","import { useEffect, memo } from 'react';\r\nimport cx from 'classnames';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowAltCircleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowAltCircleUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { noop } from '../../utils/function';\r\n\r\nimport './ArrowButton.scss';\r\n\r\n\r\ninterface ArrowButtonProps {\r\n  direction: 'left' | 'right' | 'up' | 'down'\r\n  disabled?: boolean\r\n  onClick: () => void\r\n  className?: string\r\n  enableKeyDown?: boolean\r\n  onKeyDown?: () => void\r\n}\r\n\r\nconst DIRECTION_KEYS = {\r\n  left: 'ArrowLeft',\r\n  right: 'ArrowRight',\r\n  down: 'ArrowDown',\r\n  up: 'ArrowUp'\r\n}\r\n\r\nconst DIRECTION_ICONS = {\r\n  left: faArrowAltCircleLeft,\r\n  right: faArrowAltCircleRight,\r\n  down: faArrowAltCircleDown,\r\n  up: faArrowAltCircleUp\r\n}\r\n\r\nexport const ArrowButton = memo(({ direction, disabled, onClick, className = '', enableKeyDown = false, onKeyDown = noop }: ArrowButtonProps) => {\r\n  const icon = DIRECTION_ICONS[direction];\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (disabled) return;\r\n\r\n      const isValidEvent = event.code === DIRECTION_KEYS[direction];\r\n\r\n      if (isValidEvent) {\r\n        onKeyDown();\r\n      }\r\n    }\r\n\r\n    if (enableKeyDown) {\r\n      window.addEventListener('keydown', handleKeyDown);\r\n    }\r\n\r\n    return function() {\r\n      if (enableKeyDown) {\r\n        window.removeEventListener('keydown', handleKeyDown);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <button className={cx(className, {[direction]: true })} disabled={disabled} onClick={onClick}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </button>\r\n  )\r\n})\r\n","import { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams, Link } from 'react-router-dom';\r\n\r\nimport { fetchPokemons, selectPokemons, selectFetching, selectUrls } from '../slices/pokemonsSlice';\r\nimport { PokemonList } from './PokemonList';\r\nimport { Spinner } from './common/Spinner';\r\nimport { ArrowButton } from './common/ArrowButton';\r\n\r\n\r\nimport './PokemonApp.scss';\r\n\r\nexport const PokemonApp = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { pageNumber } = useParams<{ pageNumber: string }>();\r\n\r\n  const pokemons = useSelector(selectPokemons);\r\n  const fetching = useSelector(selectFetching);\r\n  const urls = useSelector(selectUrls);\r\n\r\n  const loadPokemons = (direction: number) => {\r\n    const page = direction ? parseInt(pageNumber) + 1 : parseInt(pageNumber) - 1;\r\n\r\n    history.push(`/${page}`);\r\n  }\r\n  const loadPrevPokemons = useCallback(() => loadPokemons(0), [pageNumber]);\r\n  const loadNextPokemons = useCallback(() => loadPokemons(1), [pageNumber]);\r\n\r\n  useEffect(() => {\r\n    const page = parseInt(pageNumber);\r\n\r\n    if (isNaN(page)) {\r\n      return history.push('/1')\r\n    }\r\n\r\n    dispatch(fetchPokemons({ page: parseInt(pageNumber) }));\r\n  }, [pageNumber]);\r\n\r\n  return (\r\n    <div className=\"pokemon-app\">\r\n      {fetching && <Spinner />}\r\n      {(!fetching && !!pokemons?.length) && (\r\n        <>\r\n          <h2>Pokemon application based on <a href=\"https://pokeapi.co/\">Pokémon API</a></h2>\r\n          {urls.previousUrl && (\r\n            <ArrowButton\r\n              className=\"pokemon-btn\"\r\n              direction=\"left\"\r\n              disabled={fetching}\r\n              onClick={loadPrevPokemons}\r\n              enableKeyDown\r\n              onKeyDown={loadPrevPokemons}\r\n            />\r\n          )}\r\n          <PokemonList pokemons={pokemons} />\r\n          {urls.nextUrl && (\r\n            <ArrowButton\r\n              className=\"pokemon-btn\"\r\n              direction=\"right\"\r\n              disabled={fetching}\r\n              onClick={loadNextPokemons}\r\n              enableKeyDown\r\n              onKeyDown={loadNextPokemons}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {(!fetching && !pokemons?.length) && (\r\n        <>\r\n          <div className=\"no-results\">No pokemons were found, sorry ;(</div>\r\n          <Link to=\"/1\">Try Home</Link>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { PokemonApp } from './components/PokemonApp';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/:pageNumber\">\n        <PokemonApp />\n      </Route>\n      {/* If no page numebr exists - redirect to the first one */}\n      <Redirect to=\"/1\" />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from \"react-router-dom\";\n\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename=\"/page\">\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}